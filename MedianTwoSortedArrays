class Solution(object):
    def findMedianSortedArrays(self, nums1, nums2):
        """
        :type nums1: List[int]
        :type nums2: List[int]
        :rtype: float
        """
        len1 = len(nums1)
        len2 = len(nums2)
        len3 = len1 + len2
        if len(nums1) == 0:
            if len2%2 == 1:
                return float(nums2[len2/2])
            else:
                return float((float(nums2[len2/2])+float(nums2[len2/2-1]))/2)
        
        elif len(nums2) == 0:
            if len(nums1)%2 ==1:
                return float(nums1[len1/2])
            else:
                return float((float(nums1[len1/2])+float(nums1[len1/2-1]))/2)
        
        nums3 = [None]*(len3)
        n1 = 0
        n2 = 0
        n3 = 0
        while n1 <len1 and n2 < len2:
            if nums1[n1] < nums2[n2]:
                nums3[n3] = nums1[n1]
                n3 +=1
                n1 +=1
            else:
                nums3[n3] = nums2[n2]
                n3 +=1
                n2 +=1
                
        if n1 == len1:
            while n2 < len2:
                nums3[n3] = nums2[n2]
                n2 +=1
                n3 +=1
        elif n2 == len2:
            while n1 < len1:
                nums3[n3] = nums1[n1]
                n1 +=1
                n3 +=1
        # for chars in nums3:
        #     print("result "+ str(chars))
        if len(nums3)%2 == 1:
            return float(nums3[len3/2])
        else:
            return float((float(nums3[len3/2])+float(nums3[len3/2-1]))/2)
